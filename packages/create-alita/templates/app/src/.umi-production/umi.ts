// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import 'antd/dist/antd.less';
import { renderClient } from '@fs/Users/congxiaochen/Documents/alita/node_modules/.pnpm/@umijs+renderer-react@4.0.0-rc.1_react-dom@17.0.2+react@17.0.2/node_modules/@umijs/renderer-react';
import { getRoutes } from './core/route';
import { createPluginManager } from './core/plugin';
import { createHistory } from './core/history';
import { ApplyPluginsType, PluginManager } from 'umi';
import VConsole from '/Users/congxiaochen/Documents/alita/packages/plugins/compiled/vconsole';
import './plugin-hd/hd.tsx';

async function render() {
  const pluginManager = createPluginManager();
  const { routes, routeComponents } = await getRoutes(pluginManager);

  // allow user to extend routes
  pluginManager.applyPlugins({
    key: 'patchRoutes',
    type: 'event',
    args: {
      routes,
      routeComponents,
    },
  });
  const context = {
    routes,
    routeComponents,
    pluginManager,
    rootElement: document.getElementById('root'),
    history: createHistory({
      type: 'hash',
    }),
    basename: '/',
  };

  return (pluginManager.applyPlugins({
    key: 'render',
    type: ApplyPluginsType.compose,
    initialValue() {
      return renderClient(context);
    },
  }))();
}


import { getPluginManager } from './core/plugin';
  
  import { setRequestConfig } from '/Users/congxiaochen/Documents/alita/packages/request';
render();
const c = new VConsole({});
setRequestConfig(getPluginManager().applyPlugins({ key: 'request',type: 'modify', initialValue: {} }))
